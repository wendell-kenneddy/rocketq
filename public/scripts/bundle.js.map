{"version":3,"sources":["webpack://rocketq/./src/scripts/Modal.js","webpack://rocketq/./src/scripts/watchCopy.js","webpack://rocketq/./src/scripts/handleClick.js","webpack://rocketq/./src/scripts/App.js"],"names":["copyDiv","copyText","modalWrapper","document","querySelector","cancelBtn","Modal","classList","add","addEventListener","close","remove","modalBtn","modalTitle","modalDescription","roomForm","getElementById","handleClick","event","isCheckAsRead","preventDefault","text","description","toLocaleLowerCase","modalBtnText","action","roomId","dataset","id","questionId","target","parentElement","formAction","replace","innerHTML","setAttribute","open","checkBtns","querySelectorAll","deleteBtns","forEach","btn","e","toString","trim","tempInput","createElement","value","body","appendChild","focus","select","execCommand","removeChild"],"mappings":"yLAAA,ICWQA,EACAC,EDZFC,EAAeC,SAASC,cAAc,kBACtCC,EAAYF,SAASC,cAAc,kBAEpBE,E,sKACnB,WACEJ,EAAaK,UAAUC,IAAI,UAC3BH,EAAUI,iBAAiB,QAASH,EAAMI,S,mBAG5C,WACER,EAAaK,UAAUI,OAAO,a,yCET5BC,EAAWT,SAASC,cAAc,iBAClCS,EAAaV,SAASC,cAAc,aACpCU,EAAmBX,SAASC,cAAc,YAC1CW,EAAWZ,SAASa,eAAe,aAEnCC,EAAc,SAACC,GAAgC,IAAzBC,IAAyB,yDACnDD,EAAME,iBAEN,IAAMC,EAAQF,EAA4B,mBAAZ,UACxBG,EAAc,0BAAH,OAA6BD,EAAKE,oBAAlC,mBACXC,EAAe,QAAH,OAAWH,EAAKE,qBAC5BE,EAASN,EAAgB,QAAU,SACnCO,EAASvB,SAASa,eAAe,WAAWW,QAAQC,GACpDC,EAAaX,EAAMY,OAAOH,QAAQC,IAAMV,EAAMY,OAAOC,cAAcJ,QAAQC,GAC3EI,EAAa,oBAAaN,EAAb,YAAuBG,EAAvB,YAAqCJ,GAASQ,QAAQ,MAAO,IAUhF,OARApB,EAAWqB,UAAYb,EACvBP,EAAiBoB,UAAYZ,EAC7BV,EAASsB,UAAYV,EACrBL,EACIP,EAASL,UAAUI,OAAO,OAC1BC,EAASL,UAAUC,IAAI,OAE3BO,EAASoB,aAAa,SAAUH,GACzB1B,EAAM8B,QCxBTC,EAAYlC,SAASmC,iBAAiB,oBACtCC,EAAapC,SAASmC,iBAAiB,qBAG3CD,EAAUG,SAAQ,SAAAC,GAChBA,EAAIhC,iBAAiB,QAASQ,MAGhCsB,EAAWC,SAAQ,SAAAC,GACjBA,EAAIhC,iBAAiB,SAAS,SAAAiC,GAAC,OAAIzB,EAAYyB,GAAG,SFC9C1C,EAAUG,SAASa,eAAe,WAClCf,EAAWD,EAAQ2B,QAAQC,GAAGe,WAAWC,OAE/C5C,EAAQS,iBAAiB,SAAS,SAAAiC,GAAC,OAdbrB,EAciCpB,GAbjD4C,EAAY1C,SAAS2C,cAAc,UAC/BC,MAAQ1B,EAClBlB,SAAS6C,KAAKC,YAAYJ,GAC1BA,EAAUK,QACVL,EAAUM,SACVhD,SAASiD,YAAY,aACrBjD,SAAS6C,KAAKK,YAAYR,GAPJ,IAAAxB,EAChBwB,M","file":"bundle.js","sourcesContent":["const modalWrapper = document.querySelector('.modal-wrapper');\nconst cancelBtn = document.querySelector('.modal .cancel');\n\nexport default class Modal {\n  static open() {\n    modalWrapper.classList.add('active');\n    cancelBtn.addEventListener('click', Modal.close);\n  }\n\n  static close() {\n    modalWrapper.classList.remove('active');\n  }\n}\n","const copyToClipboard = text => {\n  const tempInput = document.createElement('input');\n  tempInput.value = text;\n  document.body.appendChild(tempInput);\n  tempInput.focus();\n  tempInput.select();\n  document.execCommand('copy');\n  document.body.removeChild(tempInput);\n}\n\nconst watchCopy = () => {\n  const copyDiv = document.getElementById('room-id');\n  const copyText = copyDiv.dataset.id.toString().trim();\n\n  copyDiv.addEventListener('click', e => copyToClipboard(copyText));\n}\n\nexport { watchCopy };\n","import Modal from './Modal.js';\nconst modalBtn = document.querySelector('.modal button');\nconst modalTitle = document.querySelector('.modal h2');\nconst modalDescription = document.querySelector('.modal p');\nconst roomForm = document.getElementById('room-form');\n\nconst handleClick = (event, isCheckAsRead = true) => {\n  event.preventDefault();\n\n  const text = !isCheckAsRead ? 'Excluir' : 'Marcar como lida';\n  const description = `Tem certeza que deseja ${text.toLocaleLowerCase()} esta pergunta?`;\n  const modalBtnText = `Sim, ${text.toLocaleLowerCase()}`;\n  const action = isCheckAsRead ? 'check' : 'delete';\n  const roomId = document.getElementById('room-id').dataset.id;\n  const questionId = event.target.dataset.id || event.target.parentElement.dataset.id;\n  const formAction = `/question/${roomId}/${questionId}/${action}`.replace(/\\s/g, '');\n\n  modalTitle.innerHTML = text;\n  modalDescription.innerHTML = description;\n  modalBtn.innerHTML = modalBtnText;\n  isCheckAsRead\n    ? modalBtn.classList.remove('red')\n    : modalBtn.classList.add('red');\n\n  roomForm.setAttribute('action', formAction);\n  return Modal.open();\n};\n\nexport { handleClick };\n","import { handleClick } from './handleClick.js';\nconst checkBtns = document.querySelectorAll('.actions a.check');\nconst deleteBtns = document.querySelectorAll('.actions a.delete');\n\nconst init = () => {\n  checkBtns.forEach(btn => {\n    btn.addEventListener('click', handleClick);\n  });\n\n  deleteBtns.forEach(btn => {\n    btn.addEventListener('click', e => handleClick(e, false));\n  });\n};\n\nexport { init };\n"],"sourceRoot":""}